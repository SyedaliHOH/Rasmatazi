<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Target: <%= target %></title>
</head>
<body>
  <header>
    <%- include("_header", { openProject: req.session.openProject, req }) -%>
  </header>

  <main class="container">
    <div class="d-flex justify-content-between align-items-center mt-4">
      <h2 class="m-0"><%= target %></h2>
      <div class="ml-auto">
        <button id="open-target-dir-btn" class="btn btn-secondary">Open Target Directory</button>
        <button id="open-terminal-btn" class="btn btn-secondary">Open Terminal Here</button>
      </div>
    </div>

    <h3 class="mt-4">Commands:</h3>
    <% commands.forEach((codeBox, index) => { %>
      <div class="card mb-4">
        <div class="card-body">
          <h5 class="card-title"><%= codeBox.heading %></h5>

          <!-- Render each command in the current codeBox -->
          <% codeBox.commands.forEach((command, commandIndex) => { %>
            <div class="float-right">
              <button class="btn btn-sm btn-secondary copy-btn" data-code-box-id="code-box-<%= index %>-<%= commandIndex %>">
                Copy
              </button>
            </div>
            <textarea id="code-box-<%= index %>-<%= commandIndex %>" readonly class="form-control" rows="<%= command.split('\n').length + 1 %>"><%= command %></textarea>
            <br>
          <% }); %>

          <!-- Optional notes or other fields -->
          <% if (codeBox.note) { %>
            <div class="mt-3">
              <p><strong>Note:</strong> <%= codeBox.note %></p>
            </div>
          <% } %>

          <% if (codeBox.par) { %>
            <div class="mt-3">
              <p><strong>Multi-Tasking:</strong> <%= codeBox.par %></p>
            </div>
          <% } %>

          <!-- State button -->
          <div class="mt-3">
            <button id="state-btn-<%= index %>" class="btn state-btn" style="background-color: <%= codeBox.stateColor %>" data-index="<%= index %>" data-project-name="<%= projectName %>" data-heading="<%= codeBox.heading %>"><%= codeBox.state %></button>
          </div>
        </div>
      </div>
    <% }); %>

    <footer>
      <%- include("_footer") -%>
    </footer>
  </main>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const copyBtns = document.querySelectorAll('.copy-btn');
      copyBtns.forEach((btn) => {
        btn.addEventListener('click', (e) => {
          const codeBoxId = e.target.dataset.codeBoxId;
          const codeBoxElement = document.getElementById(codeBoxId);
          if (codeBoxElement) {
            codeBoxElement.select();
            document.execCommand('copy');
            btn.textContent = 'Copied!';
            setTimeout(() => {
              btn.textContent = 'Copy';
            }, 2000);
          } else {
            console.error(`Code box element not found: ${codeBoxId}`);
          }
        });
      });
    });

    const stateBtns = document.querySelectorAll('.state-btn');
    stateBtns.forEach((btn) => {
      btn.addEventListener('click', (e) => {
        const index = e.target.dataset.index;
        const projectName = e.target.dataset.projectName;
        const heading = e.target.dataset.heading;
        const targetFolder = e.target.dataset.targetFolder;

        if (!targetFolder) {
          console.error('Target folder is not provided in the front-end');
          return;
        }

        fetch(`/update-state/${projectName}/${index}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ heading, targetFolder }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            e.target.textContent = 'Test';
            e.target.style.backgroundColor = 'yellow';
          } else {
            console.error('Error updating state:', data.error);
          }
        })
        .catch(error => {
          console.error('Error:', error);
        });
      });
    });

    document.addEventListener('DOMContentLoaded', () => {
      // Open Target Directory Button Click Event
      const openTargetDirBtn = document.getElementById('open-target-dir-btn');
      openTargetDirBtn.addEventListener('click', () => {
        const targetFolder = "<%= targetFolder %>"; // Server-side injected project directory
        fetch(`/open-target-folder?path=${encodeURIComponent(targetFolder)}`, {
          method: 'POST',
        })
        .then(response => {
          if (response.ok) {
            console.log("Target folder opened successfully.");
          } else {
            console.error("Error opening target folder.");
          }
        })
        .catch(error => {
          console.error("Request failed:", error);
        });
      });

      const openTerminalBtn = document.getElementById('open-terminal-btn');
      openTerminalBtn.addEventListener('click', () => {
        const targetFolder = "<%= targetFolder %>"; // Server-side injected project directory
        fetch(`/open-terminal?path=${encodeURIComponent(targetFolder)}`, {
          method: 'POST',
        })
        .then(response => {
          if (response.ok) {
            console.log("Terminal opened successfully.");
          } else {
            console.error("Error opening terminal.");
          }
        })
        .catch(error => {
          console.error("Request failed:", error);
        });
      });
    });
  </script>
</body>
</html>
